SP
ls()
decomposeSP(SP, "hosts")
decomposeSP(SP, "links")
decomposeSP(SP, "nes")
history(pattern="decompose")
SPhosts <- data.frame()
SPhosts <- rbind(SPhosts, setNames(decomposeSP(SP, "hosts"), c("cpu", "mem", "str"))
SPhosts <- rbind(SPhosts, setNames(decomposeSP(SP, "hosts"), c("cpu", "mem", "str")))
SPhosts
SPlinks <- data.frame()
history(pattern="decompose")
SPlinks <- setNames(decomposeSP(SP, "links"), c("cap", "del", "jit"))
SPlinks
history(pattern="decompose")
SPnes <- data.frame()
SPnes <- setNames(decomposeSP(SP, "nes"), c("cap", "por", "que"))
source("decomposeSP")
source("decomposeSP.R")
SPnes <- setNames(decomposeSP(SP, "nes"), c("cap", "por", "que"))
SPnes
length(SPnes)
length(SPnes[1,])
length(SPnes)
length(SPnes[,1])
nrow(SPnes)
nrow(SPlinks)
nrow(SPhosts)
lixo <- list()
lixo$p1$hosts <- list(0)
lixo$p1$links <- list(0)
lixo$p1$nes <- list(0)
lixo
decompose(lixo, "hosts")
length(lixo)
length(lixo[[1]])
length(lixo[[1]][["hosts"]])
length(lixo[[1]][["hosts"]][[1]])
decompose(lixo, "hosts")
lixo[[1]][["hosts"]][[1]]
source("decomposeProv.R")
decomposeProv(lixo, "hosts")
decomposeProv(lixo, "links")
decomposeProv(lixo, "nes")
ls()
rm(lixo)
ls()
combinations
ls()
ls()
rm(list=ls())
ls()
list.files(pattern=".R")
apply(list.files(pattern=".R"), source)
sapply(list.files(pattern=".R"), source)
ls()
ls()
SP <- createOneSP
SP
SP <- createOneSP()
SP
decomposeSP(SP, "hosts")
decomposeSP(SP, "links")
decomposeSP(SP, "nes")
version
ls()
q()
ls()
SP
SPnes
ls()
source('~/.active-rstudio-document')
ls()
SPhosts
SPlinks
SPnes
ls()
source('~/Dropbox/Workspace/git/costmodel/list2DataFrameSP.R')
ls()
SPlinks
SPhosts
ls()
SP
SPhosts
splinks
SPlinks
SPnes
ls()
providers <- createProviders("2")
providers
ls()
ls
ls()
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
Phosts
providers
Phosts
providers$p1
Phosts
providers$p1$hosts
providers$p2$hosts
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
Phosts
Plinks
Pnes
providers$p1$nes
providers$p2$nes
ls()
ls()
Phosts
SPhosts
providers <- createProviders("5")
ls()
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
Phosts
pnes
Pnes
providers$p1$nes
ls()
SPhosts
Phosts
Phosts[1,]
Phosts[,3-5]
Phosts[,3]
Phosts[,3..5]
Phosts[,4]
Phosts[,5]
Phosts[,3-5]
Phosts[,2-5]
Phosts[,-1]
Phosts[,{3..5}]
Phosts[,{3..5}]
Phosts[,3:5]
SPhosts <= Phosts[,3:5]
lixo <- Phosts[,3:5]
lixo
SPhosts <= lixo
rm(lixo)
savehistory()
ls()
ls()
phosts
Phosts
providers <- createProviders("3")
ls()
Phosts
load("list2DataFrameProv.R")
source("list2DataFrameProv.R")
Phosts
SPhosts
Plinks
providers$p3$hosts
Pnes
providers$p2$nes
ls()
phosts
Phosts
SPhosts
Plinks
splinks
SPlinks
Pnes
SPnes
Phosts
SPhosts
Pnes
SPnes
Pnes[1,]
SPnes[1,]
SPnes[2,]
Pnes[2,]
nrow(SPnes)
nrow(Pnes)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ls()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
result
head(result)
source('~/.active-rstudio-document')
result
source('~/.active-rstudio-document')
result
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
result
source('~/.active-rstudio-document')
result
duplicated(t(apply(results, 1, sort)))
duplicated(t(apply(result, 1, sort)))
t(apply(result, 1, sort))
sort(result)
sort(result[1,])
sort(result[,1])
result
result[7,]
result[43,]
result[,k==2 | l==1]
result[,"k"==2 | "l"==1]
result["k"==2 | "l"==1]
result["k"==2 | "l"==1,]
result[result$k==2 | result$l==1,]
result[result$k==2 | result$l==1]
result[,result$k==2 | result$l==1]
result[result$k==2 | result$l==1,]
result[result$k==2 & result$l==1,]
source('~/.active-rstudio-document')
result
result[result$k==2 & result$l==1,]
result[(result$k==2 & result$l==1) & (result$i==1 & result$j==2),]
nrow(result[(result$k==2 & result$l==1) & (result$i==1 & result$j==2),])
nrow(result[(result$k==2 & result$l==1) & (result$i==1 & result$j==2),]) > 0
ls()
rm(i,j,k,l)
ls()
source('~/.active-rstudio-document')
result
source('~/.active-rstudio-document')
result
result1 <- result
source('~/.active-rstudio-document')
result2 <- result
diff(result1, result2)
result1
result2
result
result[1]
result[1,]
result[1,][1]
SPnes
Pnes
SPnes[1,]
Pnes[1,]
head(result)
SPhosts
SPnes
Pnes
result
SPhosts
Phosts
10*9*8*7*6
combn(c(1,2),1)
combn(c(1,2),2)
combn(c(1,2),3)
combn(c(1,2,3),1)
combn(c(1,2,3),2)
combn(c(1,2,3),4)
combn(c(1,2,3),3)
combn(c(1:10),5)
length(combn(c(1:10),5))
c(1:10)
length(combn(c(1:10),5))
length(combn(c(1:7),2))
10*9
90*8
720*7
5040*6
length(combn(c(1:10),5))
combn(c(1:10),5)
lixo <- combn(c(1:10),5)
lixo
length(lixo)
tail(lixo)
?combn
rm(lixo)
combn(7,2)
length(combn(7,2))
result
length(combn(10,5))
combn(10,5)
combn(7,2)
Pnes
SPnes
combn(7,2)
30240/120
combn(10,5)
teste <- combn(10,5)
head(teste)
head(teste[1:10])
head(teste[1:10,])
head(teste[,1:10])
head(teste[,1:11])
head(teste[,1:20])
tail(teste[,1:20])
teste[,1:20]
teste[,250:252]
teste[,242:252]
as.data.frame(teste)
lixo<-as.data.frame(teste)
lixo
length(lixo)
SPnes
Pnes
combn(5,2)
combn(5,2)[1]
combn(5,2)[12]
combn(5,2)[,1]
length(combn(5,2))
length(combn(7,2))
length(combn(7,2)[,])
length(combn(7,2)[1,])
combn(7,2)[1,]
combn(7,2)
teste
length(teste)
252*5
length(teste[,1])
length(teste[1,])
attributes(teste)
attributes(combn(7,2))
result
result$j
result[,"j"]
result[,"j" & "l"]
result[,"j" ]
result[,"j","l" ]
result[,c("j", "l")]
combn(7,2)
result[7,]
SPnes
SPnes
combn(7,2)
Pnes[c(1,2),]
SPnes
indexes <- combn(7,2)
indexes
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
indexes
SPnes
Pnes[c(1,2),]
indexes[1]
indexes[2]
indexes[3]
indexes[4]
indexes[1,]
indexes[,1]
indexes[,1][1]
indexes[,1][2]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
SPnes
SPnes[1]
SPnes[1,]
SPnes[1,] <= Pnes[1]
SPnes[1,] <= Pnes[1,]
SPnes[1,] <= Pnes[1,c("cap", "por", "que")]
SPnes[1,]
Pnes[1,]
SPnes[2,] <= Pnes[2,c("cap", "por", "que")]
SPnes[1,] <= Pnes[2,c("cap", "por", "que")]
SPnes[2,] <= Pnes[1,c("cap", "por", "que")]
Pnes[1,]
Pnes[2,]
SPnes[1,]
SPnes[2,]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(combinacoes)
source('~/.active-rstudio-document')
SPnes[1,] <= Pnes[1,c("cap", "por", "que")]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
SPnes[2,]
Pnes[3,]
SPnes[1,]
Pnes[3,]
SPnes
Pnes
indexes[,1]
trash <- indexes[,1]
trash
trash[1]
trash[2]
trash[length(trash)]
SPnes[1,]
SPnes[1,] <= Pnes[c(1,2), c("cap", "por", "que")]
Pnes[c(1,2), c("cap", "por", "que")]
Pnes[c(1,2), c("cap", "por", "que")]
Pnes[c(1,2), c("cap", "por", "que")]
SPnes[1,]
SPnes[1,] <= Pnes[c(1,2), c("cap", "por", "que")][1]
SPnes[1,] <= Pnes[c(1,2), c("cap", "por", "que")][[1]
SPnes[1,] <= Pnes[c(1,2), c("cap", "por", "que")][[1]]
SPnes[1,] <= Pnes[c(1,2), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(1,2), c("cap", "por", "que")]
SPnes[1,]
Pnes[c(1,2), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(1,2), c("cap", "por", "que")]
SPnes[2,] %in% Pnes[c(1,2), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(3,4), c("cap", "por", "que")]
SPnes[2,] %in% Pnes[c(3,4), c("cap", "por", "que")]
SPnes[2,] %in% Pnes[c(5,6), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(5,6), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(7,8), c("cap", "por", "que")]
SPnes[2,] %in% Pnes[c(7,8), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(7,8), c("cap", "por", "que")]
SPnes[2,] %in% Pnes[c(7,8), c("cap", "por", "que")]
SPnes[1,]
Pnes[c(7,8), c("cap", "por", "que")]
Pnes[c(1,2), c("cap", "por", "que")]
Pnes[c(1,3), c("cap", "por", "que")]
SPnes[1,] %in% Pnes[c(1,3), c("cap", "por", "que")]
SPnes[c(1,2),] <= Pnes[c(1,2), c("cap", "por", "que")]
SPnes[c(1,2),]
Pnes[c(1,2), c("cap", "por", "que")]
SPnes[c(1,2),] <= Pnes[c(1,2), c("cap", "por", "que")]
SPnes[c(2,1),] <= Pnes[c(1,2), c("cap", "por", "que")]
trash
Pnes[trash,]
Pnes
Pnes[trash,]
SPnes[any(c(1,2)),]
Pnes[trash,]
Pnes[trash,]
PSnes[trash,]
SPnes[trash,]
SPhosts
Phosts
combn(2,2)
combn(2,1)
result
indexes
ls()
rm(teste, trash, result1, result2, lixo)
ls()
result
ls()
indexes
rm(indexes)
ls()
SPnes
Pnes
library(compare)
library("compare")
install.packages("compare")
library("compare")
compare(SPnes, Pnes)
compare(SPnes[1,], Pnes[1, c("cap", "por", "que")])
compare(SPnes[1,], Pnes[1, c("cap", "por", "que")], equal = TRUE, shorten = TRUE)
SPnes[1,]
Pnes[1, c("cap", "por", "que")]
SPnes[2,]
Pnes[2, c("cap", "por", "que")]
Pnes[3, c("cap", "por", "que")]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], equal = TRUE, shorten = TRUE)
SPnes[1,]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], shorten = TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")])
compare(Pnes[3, c("cap", "por", "que")], SPnes[1,])
compare(Pnes[3, c("cap", "por", "que")], SPnes[1,], shorten = TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], shorten = TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], shorten=TRUE)
compareShorten(1:5, 1:10)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)
compare(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)
compareShorten(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)
compareShorten(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)[1]
compareShorten(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)[2]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)[1]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)[2]
compareShorten(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)[2]
SPnes[1,]
Pnes[3,]
compareShorten(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE, equal = TRUE)[2]
compareShorten(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE, equal = TRUE)[2]
compareShorten(SPnes[1,][[1]], Pnes[3, c("cap", "por", "que")][[1]], allowAll=TRUE, equal = TRUE)[2]
compareShorten(SPnes[1,][[1]], Pnes[3, c("cap", "por", "que")][[1]], allowAll=TRUE, equal = TRUE)
compareShorten(SPnes[1,][[1]], Pnes[3, c("cap", "por", "que")][[1]], allowAll=TRUE)
compareShorten(SPnes[c(1,2),][[1]], Pnes[c(1,3), c("cap", "por", "que")][[1]], allowAll=TRUE)
SPnes[c(1,2),][[1]]
SPnes[c(1,2),][1]
SPnes[c(1,2),][1,]
SPnes[c(1,2),]
Pnes[c(1,3), c("cap", "por", "que")]
compareIgnoreAttrs(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)
SPnes[c(1,2),] <= Pnes[c(1,3), c("cap", "por", "que")]
SPnes[combn(2,1),] <= Pnes[c(1,3), c("cap", "por", "que")]
combn(2,1)
SPnes[c(1,2),] <= Pnes[c(1,2,3), c("cap", "por", "que")]
result
SPnes[c(1,2),] <= Pnes[c(1,2,3), c("cap", "por", "que")]
SPnes[c(1,2),] <= Pnes[c(1,2), c("cap", "por", "que")]
SPnes[c(1,2),] <= Pnes[c(1,3), c("cap", "por", "que")]
library(sqldf)
install.packages("sqldf")
library(sqldf)
sqldf("select * from SPnes")
sqldf("select * from Pnes")
sqldf("select * from Pnes[1,]")
sqldf("select * from Pnes[1,]")
sqldf("select * from Pnes")
sqldf("select * from Pnes where cap=5")
SPnes
Pnes
sqldf("select * from Pnes where cap=5")
sqldf("select * from Pnes where cap=5 and por=6 and que=1")
SPnes
sqldf("select * from Pnes where cap<=5 and por<=18 and que<=4")
sqldf("select * from Pnes where cap>=5 and por>=18 and que>=4")
sqldf("select * from Pnes where cap>=50 and por>=18 and que>=4")
