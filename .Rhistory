SPnes[1,]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], shorten = TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")])
compare(Pnes[3, c("cap", "por", "que")], SPnes[1,])
compare(Pnes[3, c("cap", "por", "que")], SPnes[1,], shorten = TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], shorten = TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], shorten=TRUE)
compareShorten(1:5, 1:10)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)
compare(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)
compareShorten(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)
compareShorten(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)[1]
compareShorten(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)[2]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)[1]
compare(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)[2]
compareShorten(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE)[2]
SPnes[1,]
Pnes[3,]
compareShorten(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE, equal = TRUE)[2]
compareShorten(SPnes[1,], Pnes[3, c("cap", "por", "que")], allowAll=TRUE, equal = TRUE)[2]
compareShorten(SPnes[1,][[1]], Pnes[3, c("cap", "por", "que")][[1]], allowAll=TRUE, equal = TRUE)[2]
compareShorten(SPnes[1,][[1]], Pnes[3, c("cap", "por", "que")][[1]], allowAll=TRUE, equal = TRUE)
compareShorten(SPnes[1,][[1]], Pnes[3, c("cap", "por", "que")][[1]], allowAll=TRUE)
compareShorten(SPnes[c(1,2),][[1]], Pnes[c(1,3), c("cap", "por", "que")][[1]], allowAll=TRUE)
SPnes[c(1,2),][[1]]
SPnes[c(1,2),][1]
SPnes[c(1,2),][1,]
SPnes[c(1,2),]
Pnes[c(1,3), c("cap", "por", "que")]
compareIgnoreAttrs(SPnes[c(1,2),], Pnes[c(1,3), c("cap", "por", "que")], allowAll=TRUE)
SPnes[c(1,2),] <= Pnes[c(1,3), c("cap", "por", "que")]
SPnes[combn(2,1),] <= Pnes[c(1,3), c("cap", "por", "que")]
combn(2,1)
SPnes[c(1,2),] <= Pnes[c(1,2,3), c("cap", "por", "que")]
result
SPnes[c(1,2),] <= Pnes[c(1,2,3), c("cap", "por", "que")]
SPnes[c(1,2),] <= Pnes[c(1,2), c("cap", "por", "que")]
SPnes[c(1,2),] <= Pnes[c(1,3), c("cap", "por", "que")]
library(sqldf)
install.packages("sqldf")
library(sqldf)
sqldf("select * from SPnes")
sqldf("select * from Pnes")
sqldf("select * from Pnes[1,]")
sqldf("select * from Pnes[1,]")
sqldf("select * from Pnes")
sqldf("select * from Pnes where cap=5")
SPnes
Pnes
sqldf("select * from Pnes where cap=5")
sqldf("select * from Pnes where cap=5 and por=6 and que=1")
SPnes
sqldf("select * from Pnes where cap<=5 and por<=18 and que<=4")
sqldf("select * from Pnes where cap>=5 and por>=18 and que>=4")
sqldf("select * from Pnes where cap>=50 and por>=18 and que>=4")
combn(6,4)
6!
factorial(6)
factorial(6)/(factorial(6-2) * factorial(2))
sqldf("select * from SPnes, Pnes where cap>=50 and por>=18 and que>=4")
sqldf("select 1 from SPnes")
sqldf("select * from SPnes")
library(sqldf)
sqldf("select * from SPnes, Pnes where cap>=50 and por>=18 and que>=4")
sqldf("select 1 from SPnes")
spnes
SPnes
sqldf("select * from Pnes where cap>=50 and por>=18 and que>=4")
sqldf("select * from Pnes where cap>=5 and por>=18 and que>=4")
SPnes[1,]
SPnes[1,]["por"]
SPnes[1,]["por"]
Pnes
SPnes[1,]["por"]=6
SPnes
sqldf("select * from Pnes where cap>=5 and por>=6 and que>=4")
sqldf("select * from Pnes where cap>=50 and por>=18 and que>=4")
sqldf("select * from Pnes where (cap>=50 and por>=18 and que>=4)")
sqldf("select * from Pnes where (cap>=50 and por>=18 and que>=4) and (cap>=50 and por>=18 and que>=4)")
sqldf("select * from Pnes where (cap>=50 and por>=18 and que>=4) or (cap>=50 and por>=18 and que>=4)")
sqldf("select * from Pnes where (cap>=5 and por>=6 and que>=4) or (cap>=50 and por>=18 and que>=4)")
sqldf("select * from Pnes where (cap>=5 and por>=6 and que>=1) or (cap>=50 and por>=18 and que>=4)")
sqldf("select * from Pnes where (cap>=5 and por>=6 and que>=4) or (cap>=50 and por>=18 and que>=4)")
sqldf("select * from Pnes where (cap>=5 and por>=6 and que>=4) and (cap>=50 and por>=18 and que>=4)")
spnes
SPnes
Pnes
ls()
SPnes
Pnes
result
indexes
combn(7,2)
SPnes
Pnes
result
SPnes
Pnes
result
source('~/Workspace/R-workspace/costmodel/indicesTentativa2.R')
indexes <- combn
indexes <- combn(7,2)
indexes
source('~/Workspace/R-workspace/costmodel/indicesTentativa2.R')
source('~/Workspace/R-workspace/costmodel/indicesTentativa2.R')
ls()
indexes
rm(list=ls())
list.fiels(pattern=".R")
list.files(pattern=".R")
list.files(pattern=".R^")
list.files(pattern=".R$")
ls()
load("~/Workspace/R-workspace/costmodel/indexes.R")
ls()
source('~/Workspace/R-workspace/costmodel/indexes.R')
source('~/Workspace/R-workspace/costmodel/decomposeSP.R')
source('~/Workspace/R-workspace/costmodel/decomposeProv.R')
source('~/Workspace/R-workspace/costmodel/createProviders.R')
source('~/Workspace/R-workspace/costmodel/createOneSP.R')
source('~/Workspace/R-workspace/costmodel/createOneProvider.R')
source('~/Workspace/R-workspace/costmodel/createNEs.R')
source('~/Workspace/R-workspace/costmodel/createLinks.R')
source('~/Workspace/R-workspace/costmodel/createHosts.R')
ls()
ls()
providers <- createOneProvider(2)
ls()
providers <- createProviders(2)
providers
providers$p1
providers$p1$hosts
providers$p1$links
providers$p1$nes
providers$p2$hosts
providers$p2$links
providers$p2$nes
SP <- createOneSP()
SP
SP <- createOneSP()
SP
ls()
source('~/Workspace/R-workspace/costmodel/list2DataFrameSP.R')
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
Phosts
Plinks
Pnes
SPhosts
ls()
SPlinks
SPnes
Pnes
ls()
rm(providers, Phosts, Plinks, Pnes)
ls()
providers <- createProviders(4)
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
SPhosts
Phosts
SPlinks
Plinks
SPnes
Pnes
ls()
SPhosts
Phosts
nrow(SPhosts)
nrow(phosts)
nrow(Phosts)
indexes(nrow(SPhosts), nrow(Phosts))
ls()
Plinks
Pnes
Phosts
allCombinations <- indexes(nrow(SPhosts), nrow(Phosts))
ls
ls()
ls()
SP
SPhosts
SPlinks
SPnes
ls()
rm(SPhosts, SPlinks, SP, SPnes, providers, Phosts, Plinks, Pnes)
ls()
SP <- createOneSP()
SP
source('~/Workspace/R-workspace/costmodel/list2DataFrameSP.R')
ls()
SPhosts
SPlinks
SPnes
providers <- createProviders(2)
providers$p1$hosts
providers$p2$hosts
providers <- createProviders(2)
providers$p1$hosts
providers$p2$hosts
providers <- createProviders(2)
providers$p1$hosts
providers$p2$hosts
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
SPhosts
Phosts
SPlinks
Plinks
SPnes
Pnes
indexes(nrow(SPhosts), nrow(Phosts))
allPossibleCombinations <- indexes(nrow(SPhosts), nrow(Phosts))
nrow(allPossibleCombinations)
source('~/.active-rstudio-document')
ls
ls()
rm(i,leftSide, rightSide)
source('~/Workspace/R-workspace/costmodel/hostsAnswers.R')
hostsCombinations <- allPossibleCombinations
hostsAnswers(hostsCombinations)
ls()
rm(allPossibleCombinations)
rm(allPossibleCombinations)
ls()
hostsAnswers()
hostsAnswers(hostsCombinations)
nrow(hostsAnswers(hostsCombinations))
nrow(hostsCombinations)
SPnes
splinks
SPlinks
source('~/Workspace/R-workspace/costmodel/linksAnswers.R')
source('~/Workspace/R-workspace/costmodel/nesAnswers.R')
ls()
head(hostsCombinations)
linksCombinations <- indexes(nrow(SPlinks), nrow(Plinks))
linksCombinations
nesCombinations <- indexes(nrow(SPnes), nrow(Pnes))
nesAnswers(nesCombinations)
providers$p1$links
providers$p2$links
nesAnswers(nesCombinations)
SPnes
pnes
Pnes
linksCombinations
linksAnswers(linksCombinations)
SPlinks
Plinks
ls()
linksAnswers()
linksAnswers(linksCombinations)
SPlinks[1,]
Plinks[4,]
Plinks[1,]
Plinks[2,]
Plinks[3,]
Plinks[4,]
ls()
Pnes <- setNames(decomposeProv(providers, "nes"), c("providerID", "resourceID", "cap", "por", "que"))
ls()
ls()
source('~/Workspace/R-workspace/costmodel/createNEs.R')
source('~/Workspace/R-workspace/costmodel/createOneProvider.R')
source('~/Workspace/R-workspace/costmodel/createOneSP.R')
source('~/Workspace/R-workspace/costmodel/createProviders.R')
source('~/Workspace/R-workspace/costmodel/decomposeProv.R')
source('~/Workspace/R-workspace/costmodel/decomposeSP.R')
source('~/Workspace/R-workspace/costmodel/indexes.R')
source('~/Workspace/R-workspace/costmodel/hostsAnswers.R')
source('~/Workspace/R-workspace/costmodel/linksAnswers.R')
source('~/Workspace/R-workspace/costmodel/nesAnswers.R')
ls()
rm(list = ls())
ls()
source('~/Workspace/R-workspace/costmodel/sourceAll.R')
ls()
SP <- createOneSP()
SP
SP <- createOneSP()
SP
SP <- createOneSP()
SP
SP <- createOneSP()
SP
SP <- createOneSP()
SP
ls()
source('~/Workspace/R-workspace/costmodel/list2DataFrameSP.R')
ls()
SPhosts
SPlinks
SPnes
ls()
providers <- createProviders(2)
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
SPlinks
Plinks
SPhosts
Phosts
providers$p2$hosts
SPhosts
Phosts
SPlinks
Plinks
SPnes
Pnes
ls()
hostsComb <- indexes(nrow(SPhosts), nrow)
hostsComb <- indexes(nrow(SPhosts), nrow(Phosts))
hostsComb
nrow(hostsComb)
linksComb <- indexes(nrow(SPlinks), nrow(Plinks))
linksComb
nesComb <- indexes(nrow(SPnes), nrow(Pnes))
nrow(SPnes)
nrow(Pnes)
source('~/Workspace/R-workspace/costmodel/indexes.R')
nesComb <- indexes(nrow(SPnes), nrow(Pnes))
ncol(SPnes)
nrow(SPnes)
nesComb <- indexes(nrow(SPnes), nrow(Pnes))
source('~/Workspace/R-workspace/costmodel/indexes.R')
nesComb <- indexes(nrow(SPnes), nrow(Pnes))
nesComb <- indexes(nrow(SPnes), nrow(Pnes))
nesComb
ls()
hostsComb
ls()
SPnes
ls()
hostsAnswers(hostsComb)
linksAnswers(linksComb)
ls(0)
ls()
decomposeProv(providers, "hosts")
source('~/Workspace/R-workspace/costmodel/decomposeProv.R')
ls()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
createOneProvider()
ls()
save.image()
save.image()
permutations()
permutations
save.image()
save.image()
ls()
rm(list = ls())
source("sourceAll.R")
permutations(2,2)
combinations(4,5)
combinations(4,3)
ls(0)
ls()
SP <- createOneSP()
SP
SP <- createOneSP()
SP
SP <- createOneSP()
SP
SP <- createOneSP()
SP <- createOneSP()
SP
ls()
missing(SP)
missing(indexes)
missing(indexes, SP)
source("createOneSP.R")
SP <- createOneSP()
SP
testeSP1 <- createOneSP(1,1,1)
testeSP1
testeSP2 <- createOneSP(3,2,1)
testeSP2
testeSP3 <- createOneSP(1,1)
testeSP3
testeSP3 <- createOneSP(numberOfHosts=1,numberOfLinks=1)
testeSP3
testeSP3 <- createOneSP(1,1,0)
testeSP3
testeSP3 <- createOneSP(1,1)
testeSP3
testeSP3 <- createOneSP(numberOfHosts=1,numberOfLinks=1)
testeSP3
testeSP3 <- createOneSP(numberOfNEs=1,numberOfLinks=2)
testeSP3
testeSP3 <- createOneSP(10,5,5)
testeSP3
save.image()
ls()
rm(list = ls())
source("sourceAll.R")
ls()
SP <- createOneSP(2,2,1)
SP
P
P <- createProviders(2)
P
source("list2DataFrameProv.R")
ls()
Phosts
rm(Phosts, Plinks, Pnes)
ls()
P
SP
ls()
source('~/Workspace/R-workspace/costmodel/list2DataFrameProv.R')
ls()
list2DataFrameProv(P, "hosts")
list2DataFrameProv(P, "links")
P$p2$links
P$p1$links
list2DataFrameProv(P, "nes")
decomposeProv(P, "hosts")
list2DataFrameProv(P, "nes")
decomposeProv(P, "nes")
rm(list = ls())
source("sourceAll.R")
ls()
ls()
SP <- createOneSP(2,2,1)
SP
decompose()
decomposeSP(SP, "hosts")
source("decomposeSP.R")
decomposeSP(SP, "hosts")
decomposeSP(SP, "links")
decomposeSP(SP, "nes")
decomposeSP(SP, "nes")
source("decomposeSP.R")
decomposeSP(SP, "nes")
decomposeSP(SP, "links")
decomposeSP(SP, "hosts")
source("decomposeProv.R")
P <- createProviders(2)
decompose(P, "hosts")
decomposeProv(P, "hosts")
decomposeProv(P, "links")
decomposeProv(P, "nes")
rm(list = ls())
source('~/Workspace/R-workspace/costmodel/sourceAll.R')
ls()
ls()
SP <- createOneSP()
SP
SP <- createOneSP(2,2,1)
SP
P <- createProviders(2)
P
SPhosts <- decomposeSP(SP, "hosts")
SPhosts
SPlinks <- decomposeSP(SP, "links")
SPnes <- decomposeSP(SP, "nes")
SPnes
SPlinks
SPhosts
Phosts <- decomposeProv(P, "hosts")
Plinks <- decomposeProv(P, "links")
Pnes <- decomposeProv(P, "nes")
ls()
SPhosts
Phosts
SPlinks
Plinks
SPnes
Pnes
ls()
hostsComb <- indexes(nrow(SPhosts), nrow(Phosts))
hostsComb
ls()
linksComb <- indexes(nrow(SPlinks), nrow(Plinks))
linksComb
hostsComb
phosts
Phosts
Plinks
nesComb <- indexes(nrow(SPnes), nrow(Pnes))
nesComb
pnes
Pnes
SPnes
hostsAnswers(hostsComb)
linksAnswers(linksComb)
nesAnswers(nesComb)
nesComb
SPnes
pnes
Pnes
Pnes[4,]
Pnes[4,"que"]
Pnes[4,"que"]=3
Pnes[4,"que"]
nesAnswers(nesComb)
nesComb
ls()
save.image()
