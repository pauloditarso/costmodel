providers$p1$nes
findHosts(SP$hosts)
SP$hosts
SP <- createOneSP()
findHosts(SP$hosts)
SP <- createOneSP()
findHosts(SP$hosts)
numberOfProviders <- 10
providers <- createProviders(numberOfProviders)
findHosts(SP$hosts)
findLinks(SP$links)
providers$p1$links[[1]]
providers$p2$links[[3]]
providers$p2$links
providers$p5$links
providers$p5$links[[1]]
findHosts(SP$hosts)
findLinks(SP$links)
respDF <- findLinks(SP$links)
respDF
respDF
respDF[respDF$matchID == 1,]
respDF[respDF$matchID == 1 $ respDF$providerID == 1,]
respDF[respDF$matchID == 1 & respDF$providerID == 1,]
rm(respDF)
ls()
findHosts(SP$hosts)
findHosts(SP$hosts)
findHosts(SP$links)
findLinks(SP$links)
SP$links
providers
SP$links
findLinks(SP$links)
providers$p1$links
providers$p2$links
providers$p2$links
providers[[2]]
providers[[1]]
providers[[2]]
providers$p2$links
providers$p2$links[[]]
providers$p2$links[[1]]
providers$p2$links[[2]]
providers$p2$links
providers$p2
providers$p1
providers$p1
providers$p2
providers[[1]]
providers[[2]]
providers
name <- paste("p", 2, sep="")
name
get(name)
providers$name
providers$
providers$paste("p", 2, sep="")
providers$[paste("p", 2, sep="")]
assign(paste("p", 2, sep="")
get(paste("p", 2, sep=""))
providers$get(paste("p", 2, sep=""))
providers$`get(paste("p", 2, sep=""))`
providers$'get(paste("p", 2, sep=""))'
providers$"get(paste("p", 2, sep=""))"
ls()
name
providers[[name]]
ls()
rm(name)
source("findlinks.R")
findLinks(SP$links)
providers$p2$links
providers[["p2"]]
source("findlinks.R")
findLinks(SP$links)
rm(list=ls())
ls()
lapply(list.files(), source)
ls()
numberOfProviders <- 10
SP <- createOneSP()
SP
providers <- createProviders(numberOfProviders)
providers
findHosts(SP$hosts)
findHosts(SP$hosts)
findLinks(SP$links)
findNEs(SP$nes)
findHosts(SP$hosts)
findHosts(SP$hosts)
SP$hosts
numberOfProviders <- 20
providers <- createProviders(numberOfProviders)
findHosts(SP$hosts)
findHosts(SP$hosts)
findNEs(SP$nes)
findLinks(SP$links)
findHosts(SP$hosts)
numberOfProviders <- 50
providers <- createProviders(numberOfProviders)
findHosts(SP$hosts)
SP$hosts
SP <- createOneSP()
findHosts(SP$hosts)
SP <- createOneSP()
findHosts(SP$hosts)
SP <- createOneSP()
findHosts(SP$hosts)
SP <- createOneSP()
findHosts(SP$hosts)
SP <- createOneSP()
findHosts(SP$hosts)
SP$hosts
providers$p1
providers$p2
SP$hosts
ls()
q()
SP <- createOneSP()
SP$hosts
SP <- createOneSP()
SP$hosts
findHosts(SP$hosts)
source("findhosts.R)
source("findhosts.R")
findHosts(SP$hosts)
length(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
providers
findHosts(SP$hosts)
findHosts(SP$hosts)$providerID
findHosts(SP$hosts)$providerID == 39
providers$p17$hosts
providers$p49$hosts
findHosts(SP$hosts)
numberOfProviders <- 2
providers$p49$hosts
providers <- createProviders(numberOfProviders)
findHosts(SP$hosts)
findNEs(SP$nes)
findLin(SP$links)
findLinks(SP$links)
SP$links
SP$links
findLinks(SP$links)
findHosts(SP$hosts)
hostsDF <- findHosts(SP$hosts)
hostsDF
length(hostsDF)
hostsDF[hostsDF$req1 > hostsDF$arg1,]
hostsDF[hostsDF$req{1..3} > hostsDF$arg{1..3},]
hostsDF[hostsDF$req\\1..\\3 > hostsDF$arg{1..3},]
hostsDF[hostsDF$req1 > hostsDF$arg1,]
hostsDF[hostsDF$req2 > hostsDF$arg1,]
hostsDF[hostsDF$req2 > hostsDF$arg2,]
hostsDF[hostsDF$req3 > hostsDF$arg3,]
hostsDF[,hostsDF$req3 > hostsDF$arg3]
hostsDF[,hostsDF$req2 > hostsDF$arg2]
hostsDF[hostsDF$req1 == hostsDF$arg1,]
findHosts(SP$hosts)
1       1    1    1    4  128          1          1    1    4  256
2       1    2    8   32  256          1          3   32   32  512
3       1    3   32   32  512          1          4   32   64 2048
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
length(providers)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
findHosts(SP$hosts)
hostsDF
hostsDF[hostsDF$matchID == 1,]
hostsDF[hostsDF$matchID == 1 & hostsDF$spID == 1,]
source("findhosts.R")
findHosts(SP$hosts)
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
hostsDF
providers$p1$hosts[1]
providers$p1$hosts[2]
hostsDF
q()
hostsDF
source("findhosts.R")
findHosts(SP$hosts)
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
errado <- findHosts(SP$hosts)
errado
errado
errado
errado[errado$matchID == 1,]
errado1 <- errado[errado$matchID == 1,]
errado2 <- errado[errado$matchID == 2,]
errado3 <- errado[errado$matchID == 3,]
errado1
errado2
errado12 <- rbind(errado1, errado2)
errado12
errado12[errado12$matchID != 2 & errado12$spID == 1 &
errado12[errado12$matchID != 2 & errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1,]
errado12[errado12$matchID != 2 & (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1),] 
errado12[errado12$matchID != 2 & (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1),] 
errado12[errado12$matchID != 2 & (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) & & (errado12$spID == 1 & errado12$providerID == 2 & errado12$resourceID == 3),]
errado12[errado12$matchID != 2 & (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) & & (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3),]
errado12[errado12$matchID != 2 & (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) & (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3),]
errado12[errado12$matchID != 2 & (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) | (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3),]
errado12[errado12$matchID != 2 & ( (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) | (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3) ),]
errado12[errado12$matchID != 2 & ( (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) | (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3) ),]
errado12[errado12$matchID != 2 & ( (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) | (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3) | (errado12$spID == 3 & errado12$providerID == 1 & errado12$resourceID == 4) ),]
errado12[errado12$matchID != 2 & ( (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) | (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3) | (errado12$spID == 3 & errado12$providerID == 1 & errado12$resourceID == 4) ),]
head(errado12)
errado12[errado12$matchID != 2 & ( (errado12$spID == 1 & errado12$providerID == 1 & errado12$resourceID == 1) | (errado12$spID == 2 & errado12$providerID == 1 & errado12$resourceID == 3) | (errado12$spID == 3 & errado12$providerID == 1 & errado12$resourceID == 3) ),]
errad12
errad012
errado12
errado3
errado
errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),]
q()
errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),]
errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),] > 0
nrow(errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),]) > 0
nrow(errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),]) > 0
SP
length(providers)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
ls()
errado
nrow(errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),]) > 0
errado
nrow(errado[errado$matchID != 2 & ( (errado$spID == 1 & errado$providerID == 1 & errado$resourceID == 1) | (errado$spID == 2 & errado$providerID == 1 & errado$resourceID == 3) | (errado$spID == 3 & errado$providerID == 1 & errado$resourceID == 3) ),]) > 0
vet <- vector()
vet
vet[1] <- TRUE
vet
vet[2] <- TRUE
vet
vet[3] <- TRUE
vet
if (vet) { print("yes")
if (vet) { print("yes") }
if (all(vet, na.rm=TRUE)) { print("yes") }
vet[4] <- FALSE
if (all(vet, na.rm=TRUE)) { print("yes") }
length(vet)
length(SP$hosts)
vet <- vector()
seq(1:length(SP$hosts))
seq(1:length(SP$hosts), FALSE)
vector(length=length(SP$hosts))
vet <- vector(length=length(SP$hosts))
vet
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
length(providers)
length(providers$p1$hosts)
length(providers$p2$hosts)
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
source("findhosts.R")
findHosts(SP$hosts)
q()
ls()
teste <- "teste"
teste
teste[1]
teste[1:]
teste[1:1]
q()
rm(teste)
ls9)
ls()
q()
ls()
errado
ls()
vert
vet
ls()
rm(list=ls())
ls()
list.fiels()
list.files()
list.files("*.R")
list.files(pattern=".R")
list.files(pattern=".R")
lapply(list.files(pattern=".R"), source)
ls()
ls()
pricing
ls()
numberOfProviders <- 2
providers <- createProviders(numberOfProviders)
providers
providers <- createProviders(numberOfProviders)
providers
ls()
SP <- createOneSP()
SP
SP <- createOneSP()
SP
ls()
providers
providers$p1$hosts[[1]]
source("combinations.R")
combinations(2)
combinations(3)
combinations(4)
combinations(1)
combinations(0)
combinations(1)
source("combinations.R")
combinations(1)
source("combinations.R")
combinations(1)
combinations(2)
combinations(1,1,2)
combinations(1,1,2)
combinations(1,1,3)
combinations(1,1,4)
source("combinations.R")
combinations(1,1,2)
source("combinations.R")
source("combinations.R")
combinations(1,1,2)
# allPossibilities <- data.frame(matrix(ncol = 5, nrow = 0))
ls()
allPossibilities <- data.frame(matrix(ncol = 5, nrow = 0))
allPossibilities
allPossibilities <- setNames(data.frame(matrix(ncol = 5, nrow = 0))
allPossibilities <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("ID", "P", "R", "P", "R"))
allPossibilities
source("combinations.R")
combinations(1,1,2, allPossibilities)
allPossibilities <- setNames(data.frame(matrix(ncol = 5, nrow = 0)), c("ID", "P1", "R1", "P2", "R2"))
combinations(1,1,2, allPossibilities)
allPossibilities
length(allPossibilities$ID)
source("combinations.R")
combinations(1,1,2, allPossibilities)
combinations(1,2,2, allPossibilities)
allPossibilities
combinations(1,2,2, allPossibilities)
allPossibilities <- combinations(1,1,2, allPossibilities)
allPossibilities
allPossibilities <- combinations(1,2,2, allPossibilities)
allPossibilities
allPossibilities
duplicated(allPossibilities)
allPossibilities
length(allPossibilities)
nrow(allPossibilities)
lixo <- data.frame()
nrow(lixo)
lixo <- data.frame(ncol=5, nrow=0)
lixo
lixo <- data.frame(matrix(ncol=5, nrow=0)
)
lixo
nrow(lixo)
rm(lixo)
source("combinations.R")
source("combinations.R")
allPossibilities <- combinations(1,2,2, allPossibilities)
allPossibilities <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("P1", "R1", "P2", "R2"))
allPossibilities <- combinations(1,2,2, allPossibilities)
allPossibilities
allPossibilities <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("P1", "R1", "P2", "R2"))
allPossibilities <- combinations(1,1,2, allPossibilities)
allPossibilities
allPossibilities <- combinations(1,2,2, allPossibilities)
allPossibilities
duplicated(allPossibilities, )
allPossibilities
unique(t(apply(allPossibilities, 1, sort)))
allPossibilities
unique(t(apply(allPossibilities, 1, sort)))
duplicated(t(apply(allPossibilities, 1, sort)))
allPossibilities
anyDuplicated(allPossibilities)
providers$p1
providers$p1$hosts
providers$p2$hosts
providers$p1$hosts
providers$p2$hosts
providers[[1]]
providers[[1]][[1]]
providers[[1]][[2]]
providers[[2]][[1]]
providers[[2]][[2]]
providers[[1]][[1]]
providers[[2]][[1]]
allPossibilities
source("combinations.R")
allPossibilities
allPossibilities <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("P1", "R1", "P2", "R2"))
allPossibilities <- combinations(1,1,2, allPossibilities)
allPossibilities
source("combinations.R")
allPossibilities <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("P1", "R1", "P2", "R2"))
allPossibilities <- combinations(1,1,2, allPossibilities)
allPossibilities
unique(allPossibilities)
(allPossibilities)
allPossibilities <- combinations(1,2,2, allPossibilities)
allPossibilities
allPossibilities
providers$p2$hosts
providers$p2$hosts
providers[[1]][[1]]
length(providers[[1]][[1]])
length(providers[[1]][[1]])
length(providers[[2]][[1]])
source("combinations.R")
combinations(1,1,2, allPossibilities)
combinations(1,1,2, allPossibilities)
providers$p1[hosts}
providers$p1[hosts]
providers$p1$hosts
source("combinations.R")
combinations(1,1,2, allPossibilities)
source("combinations.R")
combinations(1,1,1,2, allPossibilities)
combinations(1,2,1,2, allPossibilities)
source("combinations.R")
allPossibilities
allPossibilities <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("P1", "R1", "P2", "R2"))
allPossibilities <- combinations(1,1,1,2, allPossibilities)
allPossibilities
allPossibilities <- combinations(1,2,1,2, allPossibilities)
allPossibilities
allPossibilities <- combinations(1,3,1,2, allPossibilities)
allPossibilities
allPossibilities <- combinations(1,4,1,2, allPossibilities)
allPossibilities
allPossibilities <- combinations(2,1,1,2, allPossibilities)
allPossibilities
allPossibilities
allPossibilities
SP
SP[[1]]
SP[[1]][1]
request <- SP[[1]][1]
request
request <- as.list(SP[[1]][1])
request
request <- SP[[1]][[1]]
request
findMatchResource(request, 1)
hostsDF <- data.frame()
findMatchResource(request, 1)
ls()
findMatchResource(request, 1)
combinations(1,2,1,2, allPossibilities)
findMatchResource(request, 1)
allPossibilities <- setNames(data.frame(matrix(ncol = 4, nrow = 0)), c("P1", "R1", "P2", "R2"))
#for (i in 1:2) { combinations(i,j,1,2, allPossibilities) }
#for (i in 1:numberOfProviders) { for (j in 1:length(providers[[i]][[1]]) ) { combinations(i,j,1,2, allPossibilities) } }
#for (i in 1:numberOfProviders) { for ( j in 1:length(providers[[i]][[1]]) ) { combinations(i,j,1,2, allPossibilities) } }
for (i in 1:numberOfProviders) { for ( j in 1:length(providers[[i]][[1]]) ) { combinations(i,j,1,2, allPossibilities) } }
allPossibilities
for (i in 1:numberOfProviders) { for ( j in 1:length(providers[[i]][[1]]) ) { allPossibilities <- combinations(i,j,1,2, allPossibilities) } }
allPossibilities
findMatchResource(request, 1)
q()
